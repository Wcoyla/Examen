//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClienteWeb.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.WebService1Soap")]
    public interface WebService1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarCategoria", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListarCategoria();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarCategoria", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListarCategoriaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarCustomers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListarCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarCustomers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListarCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarShippers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListarShippers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListarShippers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListarShippersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarCategories", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AgregarCategories(string CategoryName, string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarCategories", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AgregarCategoriesAsync(string CategoryName, string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarCustomers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AgregarCustomers(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarCustomers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AgregarCustomersAsync(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarShippers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AgregarShippers(string CompanyName, string Phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AgregarShippers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AgregarShippersAsync(string CompanyName, string Phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarShippers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarShippers(string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarShippers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarShippersAsync(string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarCustomers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarCustomers(string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarCustomers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarCustomersAsync(string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarCategoria", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarCategoria(string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarCategoria", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarCategoriaAsync(string criterio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarCustomers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ActualizarCustomers(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarCustomers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ActualizarCustomersAsync(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarShippers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ActualizarShippers(string ShipperID, string CompanyName, string Phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarShippers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ActualizarShippersAsync(string ShipperID, string CompanyName, string Phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarCategories", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ActualizarCategories(string CategoryID, string CategoryName, string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarCategories", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ActualizarCategoriesAsync(string CategoryID, string CategoryName, string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarCustomers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet EliminarCustomers(string CustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarCustomers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> EliminarCustomersAsync(string CustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarCategoria", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet EliminarCategoria(string CategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarCategoria", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> EliminarCategoriaAsync(string CategoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarShippers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet EliminarShippers(string ShipperID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarShippers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> EliminarShippersAsync(string ShipperID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebService1SoapChannel : ClienteWeb.ServiceReference1.WebService1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebService1SoapClient : System.ServiceModel.ClientBase<ClienteWeb.ServiceReference1.WebService1Soap>, ClienteWeb.ServiceReference1.WebService1Soap {
        
        public WebService1SoapClient() {
        }
        
        public WebService1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet ListarCategoria() {
            return base.Channel.ListarCategoria();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListarCategoriaAsync() {
            return base.Channel.ListarCategoriaAsync();
        }
        
        public System.Data.DataSet ListarCustomers() {
            return base.Channel.ListarCustomers();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListarCustomersAsync() {
            return base.Channel.ListarCustomersAsync();
        }
        
        public System.Data.DataSet ListarShippers() {
            return base.Channel.ListarShippers();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListarShippersAsync() {
            return base.Channel.ListarShippersAsync();
        }
        
        public System.Data.DataSet AgregarCategories(string CategoryName, string Description) {
            return base.Channel.AgregarCategories(CategoryName, Description);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AgregarCategoriesAsync(string CategoryName, string Description) {
            return base.Channel.AgregarCategoriesAsync(CategoryName, Description);
        }
        
        public System.Data.DataSet AgregarCustomers(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax) {
            return base.Channel.AgregarCustomers(CustomerID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AgregarCustomersAsync(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax) {
            return base.Channel.AgregarCustomersAsync(CustomerID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax);
        }
        
        public System.Data.DataSet AgregarShippers(string CompanyName, string Phone) {
            return base.Channel.AgregarShippers(CompanyName, Phone);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AgregarShippersAsync(string CompanyName, string Phone) {
            return base.Channel.AgregarShippersAsync(CompanyName, Phone);
        }
        
        public System.Data.DataSet BuscarShippers(string criterio) {
            return base.Channel.BuscarShippers(criterio);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarShippersAsync(string criterio) {
            return base.Channel.BuscarShippersAsync(criterio);
        }
        
        public System.Data.DataSet BuscarCustomers(string criterio) {
            return base.Channel.BuscarCustomers(criterio);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarCustomersAsync(string criterio) {
            return base.Channel.BuscarCustomersAsync(criterio);
        }
        
        public System.Data.DataSet BuscarCategoria(string criterio) {
            return base.Channel.BuscarCategoria(criterio);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarCategoriaAsync(string criterio) {
            return base.Channel.BuscarCategoriaAsync(criterio);
        }
        
        public System.Data.DataSet ActualizarCustomers(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax) {
            return base.Channel.ActualizarCustomers(CustomerID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ActualizarCustomersAsync(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax) {
            return base.Channel.ActualizarCustomersAsync(CustomerID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax);
        }
        
        public System.Data.DataSet ActualizarShippers(string ShipperID, string CompanyName, string Phone) {
            return base.Channel.ActualizarShippers(ShipperID, CompanyName, Phone);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ActualizarShippersAsync(string ShipperID, string CompanyName, string Phone) {
            return base.Channel.ActualizarShippersAsync(ShipperID, CompanyName, Phone);
        }
        
        public System.Data.DataSet ActualizarCategories(string CategoryID, string CategoryName, string Description) {
            return base.Channel.ActualizarCategories(CategoryID, CategoryName, Description);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ActualizarCategoriesAsync(string CategoryID, string CategoryName, string Description) {
            return base.Channel.ActualizarCategoriesAsync(CategoryID, CategoryName, Description);
        }
        
        public System.Data.DataSet EliminarCustomers(string CustomerID) {
            return base.Channel.EliminarCustomers(CustomerID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> EliminarCustomersAsync(string CustomerID) {
            return base.Channel.EliminarCustomersAsync(CustomerID);
        }
        
        public System.Data.DataSet EliminarCategoria(string CategoryID) {
            return base.Channel.EliminarCategoria(CategoryID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> EliminarCategoriaAsync(string CategoryID) {
            return base.Channel.EliminarCategoriaAsync(CategoryID);
        }
        
        public System.Data.DataSet EliminarShippers(string ShipperID) {
            return base.Channel.EliminarShippers(ShipperID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> EliminarShippersAsync(string ShipperID) {
            return base.Channel.EliminarShippersAsync(ShipperID);
        }
    }
}
